========================================

=== No specific optimizations

mergesort( ascending,     5,000,000 ) =>     0 errs,                  9,999,999 invokes,       0.702s
mergesort( shuffle,       5,000,000 ) =>     0 errs,                  9,999,999 invokes,       1.144s
mergesort( ascending,    10,000,000 ) =>     0 errs,                 19,999,999 invokes,       1.421s
mergesort( shuffle,      10,000,000 ) =>     0 errs,                 19,999,999 invokes,       2.344s
mergesort( ascending,    15,000,000 ) =>     0 errs,                 29,999,999 invokes,       2.126s
mergesort( shuffle,      15,000,000 ) =>     0 errs,                 29,999,999 invokes,       3.520s
mergesort( ascending,    20,000,000 ) =>     0 errs,                 39,999,999 invokes,       2.975s
mergesort( shuffle,      20,000,000 ) =>     0 errs,                 39,999,999 invokes,       4.986s
mergesort( ascending,    25,000,000 ) =>     0 errs,                 49,999,999 invokes,       3.750s
mergesort( shuffle,      25,000,000 ) =>     0 errs,                 49,999,999 invokes,       6.232s
mergesort( ascending,    30,000,000 ) =>     0 errs,                 59,999,999 invokes,       4.605s
mergesort( shuffle,      30,000,000 ) =>     0 errs,                 59,999,999 invokes,       7.539s
mergesort( ascending,    35,000,000 ) =>     0 errs,                 69,999,999 invokes,       5.331s
mergesort( shuffle,      35,000,000 ) =>     0 errs,                 69,999,999 invokes,       9.000s
mergesort( ascending,    40,000,000 ) =>     0 errs,                 79,999,999 invokes,       6.248s
mergesort( shuffle,      40,000,000 ) =>     0 errs,                 79,999,999 invokes,      10.648s
mergesort( ascending,    45,000,000 ) =>     0 errs,                 89,999,999 invokes,       7.627s
mergesort( shuffle,      45,000,000 ) =>     0 errs,                 89,999,999 invokes,      11.566s
mergesort( ascending,    50,000,000 ) =>     0 errs,                 99,999,999 invokes,       8.199s
mergesort( shuffle,      50,000,000 ) =>     0 errs,                 99,999,999 invokes,      13.058s
mergesort( ascending,    55,000,000 ) =>     0 errs,                109,999,999 invokes,       8.719s
mergesort( shuffle,      55,000,000 ) =>     0 errs,                109,999,999 invokes,      14.465s
mergesort( ascending,    60,000,000 ) =>     0 errs,                119,999,999 invokes,       9.402s
mergesort( shuffle,      60,000,000 ) =>     0 errs,                119,999,999 invokes,      15.707s
mergesort( ascending,    65,000,000 ) =>     0 errs,                129,999,999 invokes,      10.399s
mergesort( shuffle,      65,000,000 ) =>     0 errs,                129,999,999 invokes,      16.569s
mergesort( ascending,    70,000,000 ) =>     0 errs,                139,999,999 invokes,      11.465s
mergesort( shuffle,      70,000,000 ) =>     0 errs,                139,999,999 invokes,      18.121s
mergesort( ascending,    75,000,000 ) =>     0 errs,                149,999,999 invokes,      12.253s
mergesort( shuffle,      75,000,000 ) =>     0 errs,                149,999,999 invokes,      20.183s
mergesort( ascending,    80,000,000 ) =>     0 errs,                159,999,999 invokes,      13.116s
mergesort( shuffle,      80,000,000 ) =>     0 errs,                159,999,999 invokes,      21.561s
mergesort( ascending,    85,000,000 ) =>     0 errs,                169,999,999 invokes,      14.165s
mergesort( shuffle,      85,000,000 ) =>     0 errs,                169,999,999 invokes,      22.827s
mergesort( ascending,    90,000,000 ) =>     0 errs,                179,999,999 invokes,      14.806s
mergesort( shuffle,      90,000,000 ) =>     0 errs,                179,999,999 invokes,      24.302s
mergesort( ascending,    95,000,000 ) =>     0 errs,                189,999,999 invokes,      15.215s
mergesort( shuffle,      95,000,000 ) =>     0 errs,                189,999,999 invokes,      25.208s
mergesort( ascending,   100,000,000 ) =>     0 errs,                199,999,999 invokes,      16.622s
mergesort( shuffle,     100,000,000 ) =>     0 errs,                199,999,999 invokes,      26.631s
mergesort( ascending,   150,000,000 ) =>     0 errs,                299,999,999 invokes,      24.721s
mergesort( shuffle,     150,000,000 ) =>     0 errs,                299,999,999 invokes,      41.162s
mergesort( ascending,   200,000,000 ) =>     0 errs,                399,999,999 invokes,      34.231s
mergesort( shuffle,     200,000,000 ) =>     0 errs,                399,999,999 invokes,      55.195s
mergesort( ascending,   250,000,000 ) =>     0 errs,                499,999,999 invokes,      43.248s
mergesort( shuffle,     250,000,000 ) =>     0 errs,                499,999,999 invokes,      69.354s
mergesort( ascending,   300,000,000 ) =>     0 errs,                599,999,999 invokes,      50.705s
mergesort( shuffle,     300,000,000 ) =>     0 errs,                599,999,999 invokes,      85.906s
mergesort( ascending,   350,000,000 ) =>     0 errs,                699,999,999 invokes,      62.135s
mergesort( shuffle,     350,000,000 ) =>     0 errs,                699,999,999 invokes,     100.707s
mergesort( ascending,   400,000,000 ) =>     0 errs,                799,999,999 invokes,      67.997s
mergesort( shuffle,     400,000,000 ) =>     0 errs,                799,999,999 invokes,     113.994s
mergesort( ascending,   450,000,000 ) =>     0 errs,                899,999,999 invokes,      80.014s
mergesort( shuffle,     450,000,000 ) =>     0 errs,                899,999,999 invokes,     130.790s
mergesort( ascending,   500,000,000 ) =>     0 errs,                999,999,999 invokes,      88.711s
mergesort( shuffle,     500,000,000 ) =>     0 errs,                999,999,999 invokes,     143.470s
mergesort( ascending,   550,000,000 ) =>     0 errs,              1,099,999,999 invokes,      96.698s
mergesort( shuffle,     550,000,000 ) =>     0 errs,              1,099,999,999 invokes,     158.857s
mergesort( ascending,   600,000,000 ) =>     0 errs,              1,199,999,999 invokes,     108.273s
mergesort( shuffle,     600,000,000 ) =>     0 errs,              1,199,999,999 invokes,     176.362s
mergesort( ascending,   650,000,000 ) =>     0 errs,              1,299,999,999 invokes,     116.930s
mergesort( shuffle,     650,000,000 ) =>     0 errs,              1,299,999,999 invokes,     192.945s
mergesort( ascending,   700,000,000 ) =>     0 errs,              1,399,999,999 invokes,     127.661s
mergesort( shuffle,     700,000,000 ) =>     0 errs,              1,399,999,999 invokes,     208.494s
mergesort( ascending,   750,000,000 ) =>     0 errs,              1,499,999,999 invokes,     134.948s
mergesort( shuffle,     750,000,000 ) =>     0 errs,              1,499,999,999 invokes,     224.571s
mergesort( ascending,   800,000,000 ) =>     0 errs,              1,599,999,999 invokes,     146.129s
mergesort( shuffle,     800,000,000 ) =>     0 errs,              1,599,999,999 invokes,     237.669s
mergesort( ascending,   850,000,000 ) =>     0 errs,              1,699,999,999 invokes,     155.656s
mergesort( shuffle,     850,000,000 ) =>     0 errs,              1,699,999,999 invokes,     264.851s
mergesort( ascending,   900,000,000 ) =>     0 errs,              1,799,999,999 invokes,     164.189s
mergesort( shuffle,     900,000,000 ) =>     0 errs,              1,799,999,999 invokes,     269.829s
mergesort( ascending,   950,000,000 ) =>     0 errs,              1,899,999,999 invokes,     172.095s
mergesort( shuffle,     950,000,000 ) =>     0 errs,              1,899,999,999 invokes,     285.720s
mergesort( ascending, 1,000,000,000 ) =>     0 errs,              1,999,999,999 invokes,     183.191s
mergesort( shuffle,   1,000,000,000 ) =>     0 errs,              1,999,999,999 invokes,     294.145s


=== With -Ofast optimization

mergesort( ascending,     5,000,000 ) =>     0 errs,                  9,999,999 invokes,       0.216s
mergesort( shuffle,       5,000,000 ) =>     0 errs,                  9,999,999 invokes,       0.531s
mergesort( ascending,    10,000,000 ) =>     0 errs,                 19,999,999 invokes,       0.452s
mergesort( shuffle,      10,000,000 ) =>     0 errs,                 19,999,999 invokes,       1.103s
mergesort( ascending,    15,000,000 ) =>     0 errs,                 29,999,999 invokes,       0.657s
mergesort( shuffle,      15,000,000 ) =>     0 errs,                 29,999,999 invokes,       1.674s
mergesort( ascending,    20,000,000 ) =>     0 errs,                 39,999,999 invokes,       0.924s
mergesort( shuffle,      20,000,000 ) =>     0 errs,                 39,999,999 invokes,       2.297s
mergesort( ascending,    25,000,000 ) =>     0 errs,                 49,999,999 invokes,       1.101s
mergesort( shuffle,      25,000,000 ) =>     0 errs,                 49,999,999 invokes,       2.902s
mergesort( ascending,    30,000,000 ) =>     0 errs,                 59,999,999 invokes,       1.321s
mergesort( shuffle,      30,000,000 ) =>     0 errs,                 59,999,999 invokes,       3.474s
mergesort( ascending,    35,000,000 ) =>     0 errs,                 69,999,999 invokes,       1.641s
mergesort( shuffle,      35,000,000 ) =>     0 errs,                 69,999,999 invokes,       4.113s
mergesort( ascending,    40,000,000 ) =>     0 errs,                 79,999,999 invokes,       1.908s
mergesort( shuffle,      40,000,000 ) =>     0 errs,                 79,999,999 invokes,       4.760s
mergesort( ascending,    45,000,000 ) =>     0 errs,                 89,999,999 invokes,       2.140s
mergesort( shuffle,      45,000,000 ) =>     0 errs,                 89,999,999 invokes,       5.404s
mergesort( ascending,    50,000,000 ) =>     0 errs,                 99,999,999 invokes,       2.233s
mergesort( shuffle,      50,000,000 ) =>     0 errs,                 99,999,999 invokes,       5.979s
mergesort( ascending,    55,000,000 ) =>     0 errs,                109,999,999 invokes,       2.535s
mergesort( shuffle,      55,000,000 ) =>     0 errs,                109,999,999 invokes,       6.706s
mergesort( ascending,    60,000,000 ) =>     0 errs,                119,999,999 invokes,       2.800s
mergesort( shuffle,      60,000,000 ) =>     0 errs,                119,999,999 invokes,       7.297s
mergesort( ascending,    65,000,000 ) =>     0 errs,                129,999,999 invokes,       2.962s
mergesort( shuffle,      65,000,000 ) =>     0 errs,                129,999,999 invokes,       7.908s
mergesort( ascending,    70,000,000 ) =>     0 errs,                139,999,999 invokes,       3.474s
mergesort( shuffle,      70,000,000 ) =>     0 errs,                139,999,999 invokes,       8.663s
mergesort( ascending,    75,000,000 ) =>     0 errs,                149,999,999 invokes,       3.606s
mergesort( shuffle,      75,000,000 ) =>     0 errs,                149,999,999 invokes,       9.492s
mergesort( ascending,    80,000,000 ) =>     0 errs,                159,999,999 invokes,       4.132s
mergesort( shuffle,      80,000,000 ) =>     0 errs,                159,999,999 invokes,      10.174s
mergesort( ascending,    85,000,000 ) =>     0 errs,                169,999,999 invokes,       4.424s
mergesort( shuffle,      85,000,000 ) =>     0 errs,                169,999,999 invokes,      10.696s
mergesort( ascending,    90,000,000 ) =>     0 errs,                179,999,999 invokes,       4.548s
mergesort( shuffle,      90,000,000 ) =>     0 errs,                179,999,999 invokes,      11.582s
mergesort( ascending,    95,000,000 ) =>     0 errs,                189,999,999 invokes,       4.614s
mergesort( shuffle,      95,000,000 ) =>     0 errs,                189,999,999 invokes,      11.774s
mergesort( ascending,   100,000,000 ) =>     0 errs,                199,999,999 invokes,       4.675s
mergesort( shuffle,     100,000,000 ) =>     0 errs,                199,999,999 invokes,      12.400s
mergesort( ascending,   150,000,000 ) =>     0 errs,                299,999,999 invokes,       7.378s
mergesort( shuffle,     150,000,000 ) =>     0 errs,                299,999,999 invokes,      19.674s
mergesort( ascending,   200,000,000 ) =>     0 errs,                399,999,999 invokes,       9.853s
mergesort( shuffle,     200,000,000 ) =>     0 errs,                399,999,999 invokes,      26.324s
mergesort( ascending,   250,000,000 ) =>     0 errs,                499,999,999 invokes,      12.190s
mergesort( shuffle,     250,000,000 ) =>     0 errs,                499,999,999 invokes,      32.518s
mergesort( ascending,   300,000,000 ) =>     0 errs,                599,999,999 invokes,      15.608s
mergesort( shuffle,     300,000,000 ) =>     0 errs,                599,999,999 invokes,      39.948s
mergesort( ascending,   350,000,000 ) =>     0 errs,                699,999,999 invokes,      18.016s
mergesort( shuffle,     350,000,000 ) =>     0 errs,                699,999,999 invokes,      46.876s
mergesort( ascending,   400,000,000 ) =>     0 errs,                799,999,999 invokes,      19.849s
mergesort( shuffle,     400,000,000 ) =>     0 errs,                799,999,999 invokes,      53.466s
mergesort( ascending,   450,000,000 ) =>     0 errs,                899,999,999 invokes,      23.228s
mergesort( shuffle,     450,000,000 ) =>     0 errs,                899,999,999 invokes,      60.309s
mergesort( ascending,   500,000,000 ) =>     0 errs,                999,999,999 invokes,      25.060s
mergesort( shuffle,     500,000,000 ) =>     0 errs,                999,999,999 invokes,      67.546s
mergesort( ascending,   550,000,000 ) =>     0 errs,              1,099,999,999 invokes,      28.548s
mergesort( shuffle,     550,000,000 ) =>     0 errs,              1,099,999,999 invokes,      75.021s
mergesort( ascending,   600,000,000 ) =>     0 errs,              1,199,999,999 invokes,      31.724s
mergesort( shuffle,     600,000,000 ) =>     0 errs,              1,199,999,999 invokes,      82.230s
mergesort( ascending,   650,000,000 ) =>     0 errs,              1,299,999,999 invokes,      34.317s
mergesort( shuffle,     650,000,000 ) =>     0 errs,              1,299,999,999 invokes,      90.272s
mergesort( ascending,   700,000,000 ) =>     0 errs,              1,399,999,999 invokes,      37.191s
mergesort( shuffle,     700,000,000 ) =>     0 errs,              1,399,999,999 invokes,      96.767s
mergesort( ascending,   750,000,000 ) =>     0 errs,              1,499,999,999 invokes,      40.291s
mergesort( shuffle,     750,000,000 ) =>     0 errs,              1,499,999,999 invokes,     105.856s
mergesort( ascending,   800,000,000 ) =>     0 errs,              1,599,999,999 invokes,      42.111s
mergesort( shuffle,     800,000,000 ) =>     0 errs,              1,599,999,999 invokes,     111.167s
mergesort( ascending,   850,000,000 ) =>     0 errs,              1,699,999,999 invokes,      45.832s
mergesort( shuffle,     850,000,000 ) =>     0 errs,              1,699,999,999 invokes,     119.737s
mergesort( ascending,   900,000,000 ) =>     0 errs,              1,799,999,999 invokes,      47.512s
mergesort( shuffle,     900,000,000 ) =>     0 errs,              1,799,999,999 invokes,     126.456s
mergesort( ascending,   950,000,000 ) =>     0 errs,              1,899,999,999 invokes,      49.608s
mergesort( shuffle,     950,000,000 ) =>     0 errs,              1,899,999,999 invokes,     132.065s
mergesort( ascending, 1,000,000,000 ) =>     0 errs,              1,999,999,999 invokes,      53.415s
mergesort( shuffle,   1,000,000,000 ) =>     0 errs,              1,999,999,999 invokes,     142.527s

========================================
